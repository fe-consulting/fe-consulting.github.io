{"data":{"markdownRemark":{"html":"<h3 id=\"enforce-your-team-coding-style-with-prettier-and-tslint\"><a href=\"#enforce-your-team-coding-style-with-prettier-and-tslint\" aria-label=\"enforce your team coding style with prettier and tslint permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enforce your team coding style with Prettier and TsLint</h3>\n<p>A project’s coding style is the first and most noticeable trait that a new senior hire will be looking at while browsing the codebase for the first time. </p>\n<p>On the surface, that’s because it is probably the simplest way to evaluate a codebase at a glance. On a deeper level, that’s because good programmers just simply love tidiness, simplicity and coherence. These three simple aspects will make or break your hire first impression with your project and company as a whole.</p>\n<p>Obviously, while attracting people who will be excited to work on your codebase is important, keeping your codebase clean and coherent goes a long way for a project’s overall longevity and success.</p>\n<h3 id=\"developer-experience-dx-matters\"><a href=\"#developer-experience-dx-matters\" aria-label=\"developer experience dx matters permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Developer Experience (DX) Matters</h3>\n<p>Never more than today, developers can enjoy an unparalleled developer experience. Especially in the Front End world, the improvements to DX have been too important to ignore: static checking, conditional typing, smarter IDEs, linters, automated testing frameworks, and so on. </p>\n<p>If there is something that makes a team inefficient and unmotivated, that is definitely a bad DX.</p>\n<p>It is an architect/manager’s job to make DX a critical part of the development processes of a team for a number of reasons:</p>\n<ul>\n<li>keep technology stack clean and performant for the current team, and new hires</li>\n<li>keep team happy and motivated. Your team’s morale is as important as the quality of your product</li>\n</ul>\n<p>While a good DX is a broad and vast topic, what I what to talk about in this article is one of the pillars of good code: coding guidelines. </p>\n<p>While community-wide guidelines are important and serve as a standard indicator of best practices — I tend to give more importance to what a team thinks of a certain style, and not the community as a whole. The team always comes first — but in the same time every decision taken against community standards should be logical and documented. A (good) new hire will eventually question such decisions.</p>\n<p>To me, <strong>coding guidelines are a set of rules every member of the team agrees to follow and respect</strong>. As this is certainly most important in the beginning of a project, the tools available today, like Prettier and TsLint, allow a project to be conformant to a coding guideline at any stage.</p>\n<h3 id=\"prettier--tslint--tidiness-simplicity--coherence\"><a href=\"#prettier--tslint--tidiness-simplicity--coherence\" aria-label=\"prettier  tslint  tidiness simplicity  coherence permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prettier + TsLint = tidiness, simplicity &#x26; coherence</h3>","frontmatter":{"title":"Enforce your team coding style with Prettier and TsLint","date":"17.04.2019","category":"angular"},"timeToRead":2}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/enforce-your-team-coding-style-with-prettier-and-ts-lint","prev":{"fields":{"slug":"/on-push-change-detection-for-faster-angular-apps"},"frontmatter":{"title":"OnPush change detection for faster Angular apps","category":"angular"}},"next":null}}