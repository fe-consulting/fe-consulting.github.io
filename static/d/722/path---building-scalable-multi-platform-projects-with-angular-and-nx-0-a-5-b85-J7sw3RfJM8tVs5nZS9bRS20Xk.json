{"data":{"markdownRemark":{"html":"<p>This article is a follow-up from my previous thought that I wrote on <a href=\"https://medium.com/r/?url=https%3A%2F%2Fitnext.io%2Fbuilding-an-enterprise-grade-angular-project-structure-f5be32533ba3%3Fsource%3D---------19------------------\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">building enterprise-scale projects in Angular</a>.</p>\n<p>In the previous article, monorepos and Nx were mentioned but I had not yet had the pleasure to try them out. It was clear, that although the structure mentioned was decent enough for a single project targeting a single platform, it would have fallen short for sharing code with other projects.</p>\n<h3 id=\"monorepos-to-the-rescue\"><a href=\"#monorepos-to-the-rescue\" aria-label=\"monorepos to the rescue permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Monorepos to the¬†rescue</h3>\n<p>In the past few months, I have been working on multiple projects‚Ää‚Äî‚Ääsome with a high degree of complexity; one of my projects required me to <strong>write an application that needs to be able to run on multiple platforms</strong>, which is one of the reasons why I felt the previous article needed an update:</p>\n<ul>\n<li>I want to ship a single project for multiple devices (mobile, desktop) sharing as much code as possible</li>\n<li>I want my project‚Äôs <em>API</em> to share models with the client applications, in the same workspace</li>\n<li>I want <em>SSR</em> (Server-Side Rendering) because, well, it‚Äôs 2019</li>\n</ul>\n<h3 id=\"what-this-article-is-about\"><a href=\"#what-this-article-is-about\" aria-label=\"what this article is about permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What this article is¬†about</h3>\n<p>Let‚Äôs face it - Building scalable projects is hard. I‚Äôm sure you had a similar conversation at least once in your career:¬†</p>\n<ul>\n<li><strong>You</strong>: Hey, where should we place these functions? It‚Äôs getting messy ü§î</li>\n<li><strong>Colleague</strong>: Oh, just create (yet another) folder ‚Äúutils‚Äù and put it there üòê</li>\n<li><strong>You</strong>: Okay‚Ä¶ üôÑ</li>\n</ul>\n<p>In the first part of this article, <strong>we‚Äôre going to discuss how Nx helps structure your applications</strong>, and how we can leverage it to build insanely scalable projects.</p>\n<p>In the second part, we take a more hands-on approach: <strong>a step-by-step guide on setting up an Angular application</strong> that is server-side rendered with NestJS, sharing code with a mobile Ionic application. It took some time for me to get it all right, so I want to help you (and future me) to do it effortlessly.</p>\n<h2 id=\"tech-stack\"><a href=\"#tech-stack\" aria-label=\"tech stack permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tech Stack</h2>\n<p>In order to do this, I will be using the following technologies:</p>\n<ul>\n<li><a href=\"https://medium.com/r/?url=https%3A%2F%2Fnx.dev%2Fangular\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><strong>Nx Workspaces</strong></a>: without a doubt the best tool to manage monorepos with <em>Angular</em> projects. <em>Nx</em> augments the CLI and allows us to easily build multiple apps in the same repository with ease</li>\n<li><strong>Ionic/xplat:</strong> Ionic is an awesome mobile framework for building cross-platform apps. Thanks to <a href=\"https://medium.com/r/?url=https%3A%2F%2Fnstudio.io%2Fxplat\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">xPlat</a>, we will be able to easily create an Ionic app that integrates with <em>Nx</em></li>\n<li><a href=\"https://medium.com/r/?url=https%3A%2F%2Fnestjs.com%2F\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><strong>NestJS</strong></a>: a progressive <em>NodeJS</em> framework inspired by <em>Angular</em></li>\n</ul>\n<h2 id=\"introduction-to-nx-workspaces\"><a href=\"#introduction-to-nx-workspaces\" aria-label=\"introduction to nx workspaces permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction to Nx Workspaces</h2>\n<p>There are two reasons why you may want to use <em>Nx</em>:¬†</p>\n<ul>\n<li>you work with multiple teams and multiple projects that can share code together</li>\n<li>or, you are obsessed with code organization like I am!</li>\n</ul>\n<p>Jokes aside, <em>Nx</em> is a wonderful tool that <strong>helps to organize code in a scalable fashion</strong>; even if you‚Äôre not planning on writing the next Facebook, the goodies provided by the <a href=\"https://medium.com/r/?url=https%3A%2F%2Fnrwl.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Nrwl</a> team are enough of a reason for me to kickstart my projects with <em>Nx</em>.</p>\n<h3 id=\"applications\"><a href=\"#applications\" aria-label=\"applications permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Applications</h3>\n<p>Nx is a tool to create extensible mono-repository projects. If you have used the Angular CLI, <em>Nx</em> will look familiar, but with some differences.</p>\n<p>Every application will be created within a folder called <code class=\"language-text\">/apps</code>, including your e2e tests project. For example, you may create apps written in <em>Angular</em>, <em>React</em>, <em>Ionic</em>, <em>Nativescript</em>, <em>Express</em>, <em>NestJS</em>, etc.</p>\n<p>Or, <strong>all of them at once</strong>, sharing code!</p>\n<h3 id=\"libraries\"><a href=\"#libraries\" aria-label=\"libraries permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Libraries</h3>\n<p>Your libraries, instead, will be placed within the folder <code class=\"language-text\">/libs</code>.</p>\n<p>What exactly are they, though? Of course, small reusable pieces of code than any application within our workspace can use; but as <em>Nx</em> also says, <strong>libraries are smaller units of code with a well-defined API</strong>.</p>\n<p>Libraries are ideal for sharing <strong>Angular Entities</strong> and <strong>Typescript Entities.</strong> For example:</p>\n<ul>\n<li>It is likely that you will want to share the same interfaces between front-end and back-end. Creating a lib called <code class=\"language-text\">models</code> will allow all your applications to access the same models without having to rewrite them twice</li>\n<li>Your applications will likely make use of lots of components, pipes, directives, and services that will be common between all your applications: tests, mobile, front-office, back-office, etc.</li>\n</ul>\n<h3 id=\"anatomy-of-an-nx-workspace\"><a href=\"#anatomy-of-an-nx-workspace\" aria-label=\"anatomy of an nx workspace permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Anatomy of an Nx Workspace</h3>\n<p>The project structure below is the starting point of any Nx project:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;workspace name&gt;/  \n‚îú‚îÄ‚îÄ apps/  \n‚îÇ   ‚îú‚îÄ‚îÄ myapp/  \n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ src/  \n‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ app/  \n‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ assets/  \n‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ environments/  \n‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ favicon.ico  \n‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ index.html  \n‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ main.ts  \n‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ polyfills.ts  \n‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ styles.scss  \n‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ test.ts  \n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ browserslist  \n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ jest.config.js  \n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ tsconfig.app.json  \n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ tsconfig.json  \n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ tsconfig.spec.json  \n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ tslint.json  \n‚îÇ   ‚îî‚îÄ‚îÄ myapp-e2e/  \n‚îÇ       ‚îú‚îÄ‚îÄ src/  \n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ fixtures/  \n‚îÇ       ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ example.json  \n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ integration/  \n‚îÇ       ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ app.spec.ts  \n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ plugins/  \n‚îÇ       ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ index.ts  \n‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ support/  \n‚îÇ       ‚îÇ       ‚îú‚îÄ‚îÄ app.po.ts  \n‚îÇ       ‚îÇ       ‚îú‚îÄ‚îÄ commands.ts  \n‚îÇ       ‚îÇ       ‚îî‚îÄ‚îÄ index.ts  \n‚îÇ       ‚îú‚îÄ‚îÄ cypress.json  \n‚îÇ       ‚îú‚îÄ‚îÄ tsconfig.e2e.json  \n‚îÇ       ‚îú‚îÄ‚îÄ tsconfig.json  \n‚îÇ       ‚îî‚îÄ‚îÄ tslint.json  \n‚îú‚îÄ‚îÄ libs/  \n‚îú‚îÄ‚îÄ tools/  \n‚îú‚îÄ‚îÄ README.md  \n‚îú‚îÄ‚îÄ angular.json  \n‚îú‚îÄ‚îÄ nx.json  \n‚îú‚îÄ‚îÄ package.json  \n‚îú‚îÄ‚îÄ tsconfig.json  \n‚îî‚îÄ‚îÄ tslint.json</code></pre></div>\n<h2 id=\"working-with-nx-creating-applications\"><a href=\"#working-with-nx-creating-applications\" aria-label=\"working with nx creating applications permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Working with Nx: Creating Applications</h2>\n<p>Now that I (may have) convinced you to use <em>Nx</em> and <em>Angular</em>, I am going to show you, step-by-step, how to set up a dream tech-stack that I described above.</p>\n<h3 id=\"creating-a-new-nx-workspace-with-angular-and-nest\"><a href=\"#creating-a-new-nx-workspace-with-angular-and-nest\" aria-label=\"creating a new nx workspace with angular and nest permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a new Nx Workspace with Angular and¬†Nest</h3>\n<p>We will start with a few commands that will kickstart our project structure thanks to <em>Nx</em> until we will have a working monorepo project with the latest Angular version and <em>NestJS</em> as <em>NodeJs</em> framework.</p>\n<p>The following command will generate a working monorepo project with the latest Angular version and NestJS as Server-Side Node framework:</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/2400/1*uhEP6aleLqbeyXYuptXvWg.png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ new workspace --preset=&quot;angular-nest&quot; --appName=&quot;nx-angular-ssr&quot; --style=&quot;scss&quot; --collection=[@nrwl/workspace](https://medium.com/r/?url=http%3A%2F%2Ftwitter.com%2Fnrwl%2Fworkspace &quot;Twitter profile for @nrwl/workspace&quot;)</code></pre></div>\n<p>The command line will prompt what style preprocessor you like, I‚Äôd recommend choosing <em>SCSS</em>.¬†<br>\nSit tight, it will take a while. Nx will create a workspace in a folder named <code class=\"language-text\">workspace</code>.</p>\n<h2 id=\"api-and-server-side-rendering\"><a href=\"#api-and-server-side-rendering\" aria-label=\"api and server side rendering permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API and Server-Side Rendering</h2>\n<p>NestJS provides an awesome CLI plugin in order to automatically prepare the application for server-side rendering.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*4A3J6f6vjWzOPYGtfijqKQ.png\"></p>\n<p>Run the following command in the Nx workspace:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ng add @nestjs/ng-universal</code></pre></div>\n<p>When the command line prompts for the application name, enter <code class=\"language-text\">nx-angular-ssr</code>. The plugin will create a folder named <code class=\"language-text\">server</code>, but we already have a server application, so we will ignore that (that means, you can delete it). As expected, we need to do some changes.</p>\n<h3 id=\"importing-angulars-universal-module\"><a href=\"#importing-angulars-universal-module\" aria-label=\"importing angulars universal module permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Importing Angular‚Äôs Universal Module</h3>\n<p>The first thing to do is to import Angular Universal in our Nest application: to do that, we open the file <code class=\"language-text\">apps/api/app/app.module.ts</code> and we paste the following code to the imports array of the <code class=\"language-text\">AppModule</code> class:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">AngularUniversalModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>  \n  viewsPath<span class=\"token punctuation\">:</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dist/browser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  \n  bundle<span class=\"token punctuation\">:</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../server/main'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  \n  liveReload<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>  \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Of course, don‚Äôt forget to import <code class=\"language-text\">AngularUniversalModule</code> and <code class=\"language-text\">join</code>.</p>\n<h3 id=\"fixing-the-environments-path\"><a href=\"#fixing-the-environments-path\" aria-label=\"fixing the environments path permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fixing the environments` path</h3>\n<p>We need to apply a small change to the <code class=\"language-text\">angular.json</code> configuration. Unfortunately, the path to the environments files is incorrect, so we patch it according to the real path, which is <code class=\"language-text\">apps/nx-angular-ssr/src/environments</code> as shown in the image below:</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*BJqLeuogbRK5Er5qzy6Tug.png\"></p>\n<h3 id=\"adjust-webpacks-configuration\"><a href=\"#adjust-webpacks-configuration\" aria-label=\"adjust webpacks configuration permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adjust Webpack‚Äôs configuration</h3>\n<p>The last thing we need to adjust is the server‚Äôs Webpack configuration. Open the file <code class=\"language-text\">webpack.server.config</code> and replace the content with the following snippet:</p>\n<p>And at this point, it‚Äôs all done! We only need to build and run our application.</p>\n<h4 id=\"run-the-server-rendered-angular-app-wih-nest-js\"><a href=\"#run-the-server-rendered-angular-app-wih-nest-js\" aria-label=\"run the server rendered angular app wih nest js permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Run the Server-Rendered Angular app Wih Nest¬†JS</h4>\n<p>The NestJS plugin added some useful command to build and run the application. We first need to build the SSR application by running:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm run build:ssr</code></pre></div>\n<p>And then, we‚Äôre able to serve it:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm run serve:ssr</code></pre></div>\n<p>Open your browser at <code class=\"language-text\">http://localhost:3333</code> and there is your server-rendered <em>Angular</em> application powered by <em>NestJS</em>!</p>\n<h3 id=\"adding-an-ionic-application-with-xplat\"><a href=\"#adding-an-ionic-application-with-xplat\" aria-label=\"adding an ionic application with xplat permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding an Ionic application with¬†xPlat</h3>\n<p><a href=\"https://medium.com/r/?url=https%3A%2F%2Fnstudio.io%2Fxplat%2Fgetting-started%2Fgetting-started\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">xPlat</a> is a tool that extends Nx Workspaces with a set of generators that help kickstart projects written in <em>Electron</em>, <em>NativeScript</em>, and <em>Ionic</em>. In our case, we want to use it for generating a mobile application written using Ionic.</p>\n<h4 id=\"generating-an-ionic-app\"><a href=\"#generating-an-ionic-app\" aria-label=\"generating an ionic app permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generating an Ionic¬†app</h4>\n<p>In order to generate applications using xPlat, we need to install it first. Run this CLI command in your workspace root:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ng add @nstudio/xplat</code></pre></div>\n<p>You will be prompted what sort of application you want to use:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[] Electron  \n[] NativeScript  \n[-] Ionic</code></pre></div>\n<p>In our case, we will choose Ionic for Angular projects (which will be asked in the next step).</p>\n<p>We will then generate our application using the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ng generate app</code></pre></div>\n<p>The CLI will prompt us for some configuration. Here are my choices below:</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*vUwvmpVe47N9wcoIV-ehAA.png\"></p>\n<p>When the CLI asks for the folder where the app will be located, enter an empty space, and it will be automatically placed within <code class=\"language-text\">apps</code>.</p>\n<h4 id=\"adding-capacitor\"><a href=\"#adding-capacitor\" aria-label=\"adding capacitor permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding Capacitor</h4>\n<p><em>Capacitor</em> is <em>Ionic‚Äôs</em> framework to build cross-platform applications. For some reason, it did not automatically get added, so we install it manually:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm i --save-dev @capacitor/core</code></pre></div>\n<h4 id=\"running-the-app\"><a href=\"#running-the-app\" aria-label=\"running the app permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running the¬†app</h4>\n<p>We will run the application in the same way we run any other CLI application. The only thing to notice is that <em>xPlat</em> prefixed the name of our application with the prefix <code class=\"language-text\">ionic-</code>.</p>\n<p>Run the following command in order to run the Ionic app in the browser:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ng serve ionic-mobile</code></pre></div>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*nrXO1F4fbIGGgTP_95RsEA.png\"></p>\n<h4 id=\"sharing-code\"><a href=\"#sharing-code\" aria-label=\"sharing code permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sharing Code</h4>\n<p>Now that the app is set-up and running, we want to start sharing code between our applications. An example of ideal code-sharing would be our state-management modules or a UI component library.</p>\n<p>As we said earlier, all the code that we plan to share across the applications will be added as a library under the folder <code class=\"language-text\">libs</code>. The application generated by xPlat already sets up the paths for us to import libraries using virtual paths, but I wasn‚Äôt too happy with it.</p>\n<p>The default virtual path in the tsconfig.json is set-up as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;@workspace/*&quot;: [&quot;../../libs/*&quot;]</code></pre></div>\n<p>Unfortunately, this makes us have to also write the whole path to the <code class=\"language-text\">src/lib/index.ts</code> barrel file, which is inconvenient. As a result, I decided to add the following paths in order to access the UI library more quickly:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;paths&quot;: {  \n    ...other paths,  \n    &quot;@workspace/ui&quot;: [&quot;../../libs/ui/src/index.ts&quot;],  \n    &quot;@workspace/ui/*&quot;: [&quot;../../libs/ui/src/*&quot;]  \n}</code></pre></div>\n<p>Once that‚Äôs done, I open the file <code class=\"language-text\">home.module.ts</code> in our mobile application and import the UI library‚Äôs module:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// other imports...  \nimport { UiModule } from &#39;@workspace/ui&#39;;\n\n@NgModule({  \n  imports: [SharedModule, HomeRoutingModule, UiModule],  \n  declarations: [HomeComponent],   \n  schemas: [CUSTOM_ELEMENTS_SCHEMA]  \n})  \nexport class HomeModule {}</code></pre></div>\n<p>Our home route in the Ionic application has now access to the components developed in parallel with the other platforms!</p>\n<h3 id=\"not-just-ionic\"><a href=\"#not-just-ionic\" aria-label=\"not just ionic permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Not just¬†Ionic</h3>\n<p>As we said, <em>xPlat</em> also allows you to build for other platforms, such as <em>NativeScript</em> and <em>Electron</em> (and who know what else in the future!).¬†</p>\n<p>As a result, the code could be shared between even more applications.</p>\n<h2 id=\"final-words\"><a href=\"#final-words\" aria-label=\"final words permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Final Words</h2>\n<p>Building a large project, able to share code and scale across multiple teams is surely no easy feat.</p>\n<p>Monorepo architectures allow us to work in parallel and easily share code, and Nx makes managing the monorepo a much easier job than it would be otherwise.</p>\n<p>This article showed you an example of how we can achieve a dream tech-stack with awesome technologies such as <em>NestJS</em> and <em>Ionic</em>, accelerate processes, maximize code reusability and organize a scalable project structure thanks to <em>Nx.</em></p>\n<h3 id=\"references-and-related-reading\"><a href=\"#references-and-related-reading\" aria-label=\"references and related reading permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References and Related¬†Reading</h3>\n<ul>\n<li><a href=\"https://medium.com/r/?url=https%3A%2F%2Fnx.dev%2Fangular\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Nx</a></li>\n<li><a href=\"https://medium.com/r/?url=https%3A%2F%2Fnstudio.io%2Fxplat\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XPlat</a></li>\n<li><a href=\"https://medium.com/r/?url=https%3A%2F%2Fblog.nrwl.io%2Fmisconceptions-about-monorepos-monorepo-monolith-df1250d4b03c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Misconceptions about Monorepos: Monorepo¬†!= Monolith</a> by Victor Savkin</li>\n</ul>\n<p>If you need any clarifications, or if you think something is unclear or wrong, do please leave a comment!</p>","frontmatter":{"title":"Building Scalable Multi-Platform Projects with Angular and¬†Nx","date":"25.08.2019","category":"angular","featuredImage":"https://cdn-images-1.medium.com/max/1600/0*erZf_hQ4V3MLHSyf","canonical":null},"timeToRead":11}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/building-scalable-multi-platform-projects-with-angular-and-nx","prev":null,"next":{"fields":{"slug":"/debugging-javascript-like-a-pro"},"frontmatter":{"title":"Debugging Javascript Like a Pro","category":"javascript"}}}}